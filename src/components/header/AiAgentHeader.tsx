import React, { memo, ReactNode } from "react";
import { StyleSheet, View, Text, ViewStyle, TextStyle, StyleProp } from "react-native";
import { ThemeType } from "rn-vs-lb/theme";
import { ThreeDotsMenu } from "rn-vs-lb";

import { BackButton, ShareIconButton } from "../buttons";

type AiAgentHeaderProps = {
  theme: ThemeType;
  onBack: () => void;
  /** –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –∫–Ω–æ–ø–∫–∞ ¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è¬ª. –ï—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω ‚Äî –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º */
  onShare?: () => void;
  /** –ü—É–Ω–∫—Ç—ã –¥–ª—è –º–µ–Ω—é. –ï—Å–ª–∏ –ø—É—Å—Ç–æ/undefined ‚Äî –º–µ–Ω—é –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º */
  items?: any[]; // –∏–ª–∏ –≤–∞—à —Ç–∏–ø
  menuPositionLeft?: number;
  menuPositionTop?: number;
  isDark?: boolean;

  /** –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ —Ü–µ–Ω—Ç—Ä—É */
  title?: string;
  /** –ö–∞—Å—Ç–æ–º–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞ (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω —Å–ª–æ–∂–Ω—ã–π JSX) */
  renderTitle?: ReactNode;
  /** –ö–æ–Ω—Ç–µ–Ω—Ç —Å–ø—Ä–∞–≤–∞ –æ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±–∞–ª–∞–Ω—Å —Ç–æ–∫–µ–Ω–æ–≤) */
  renderRight?: ReactNode;
  /** –°—Ç–∏–ª–∏ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –∏ –∑–∞–≥–æ–ª–æ–≤–∫—É */
  style?: StyleProp<ViewStyle>;
  titleStyle?: TextStyle;
};

export const AiAgentHeader = memo((props: AiAgentHeaderProps) => {
  const {
    theme,
    onBack,
    onShare,
    items,
    menuPositionLeft = 210,
    menuPositionTop = 10,
    isDark = false,
    title,
    renderTitle,
    renderRight,
    style,
    titleStyle,
  } = props;

  const styles = getStyles(theme, isDark);

  const hasMenu = Array.isArray(items) && items.length > 0;
  const hasShare = typeof onShare === "function";
  const hasActions = hasMenu || hasShare;
  const hasRightContent = Boolean(renderRight) || hasActions;

  return (
    <View style={[styles.header, style]}>
      {/* –õ–µ–≤–∞—è –∫–Ω–æ–ø–∫–∞ */}
      <View style={styles.sideSlotLeft}>
        <BackButton onPress={onBack} style={styles.iconButton} iconColor={theme.title} />
      </View>

      {/* –¶–µ–Ω—Ç—Ä ‚Äî –∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <View style={styles.center}>
        {renderTitle ? (
          renderTitle
        ) : (
          title && <Text style={[styles.headerTitle, titleStyle]}>{title}</Text>
        )}
      </View>

      {/* –ü—Ä–∞–≤–∞—è –∑–æ–Ω–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π) */}
      {hasRightContent ? (
        <View style={styles.sideSlotRight}>
          {renderRight ? (
            <View style={[styles.rightAddon, hasActions && styles.rightAddonWithActions]}>
              {renderRight}
            </View>
          ) : null}
          {hasShare && (
            <ShareIconButton
              onPress={onShare!}
              style={[styles.iconButton, styles.iconButtonSecondary]}
              iconColor={theme.title}
            />
          )}
          {hasMenu && (
            <ThreeDotsMenu
              positionLeft={menuPositionLeft}
              positionTop={menuPositionTop}
              iconColor={theme.black}
              style={[styles.iconButton, styles.iconButtonSecondary]}
              items={items}
            />
          )}
        </View>
      ) : (
        <View style={[styles.sideSlotRight, styles.sideSlotRightPlaceholder]} />
      )}
    </View>

  );
});

AiAgentHeader.displayName = "AiAgentHeader";

const LEFT_ICON_WIDTH = 44;
const RIGHT_SLOT_MIN_WIDTH = LEFT_ICON_WIDTH + 8 + LEFT_ICON_WIDTH; // —à–∏—Ä–∏–Ω–∞ –ø–æ–¥ –¥–≤–µ –∏–∫–æ–Ω–∫–∏ (–∫–Ω–æ–ø–∫–∞ + –æ—Ç—Å—Ç—É–ø + –∫–Ω–æ–ø–∫–∞)

const getStyles = (theme: ThemeType, isDark: boolean) =>
  StyleSheet.create({
    header: {
      flexDirection: 'row',
      alignItems: 'center',
      paddingHorizontal: 8,
      marginTop: 12,
    },
    sideSlotLeft: {
      flexShrink: 0,
      flexDirection: 'row',
      alignItems: 'center',
      minWidth: LEFT_ICON_WIDTH,
    },
    sideSlotRight: {
      flexShrink: 0,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'flex-end',
      minWidth: RIGHT_SLOT_MIN_WIDTH,
    },
    sideSlotRightPlaceholder: {
      width: RIGHT_SLOT_MIN_WIDTH,
    },
    center: {
      flex: 1, // üëà —Ü–µ–Ω—Ç—Ä –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Å—ë –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
      alignItems: 'center',
      justifyContent: 'center',
      paddingHorizontal: 8,
    },
    headerTitle: {
      color: theme.title,
      marginLeft: -LEFT_ICON_WIDTH, // —à–∏—Ä–∏–Ω–∞ –∏–∫–æ–Ω–∫–∏
      fontSize: 18,
      fontWeight: '700',
      textAlign: 'center',
      flexShrink: 1, // üëà –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ç–µ–∫—Å—Ç—É —Å–∂–∏–º–∞—Ç—å—Å—è, –∞ –Ω–µ –≤—ã–ª–∞–∑–∏—Ç—å
      flexWrap: 'wrap', // üëà –ø–µ—Ä–µ–Ω–æ—Å –¥–ª–∏–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫
    },
    iconButton: {
      width: LEFT_ICON_WIDTH,
      height: LEFT_ICON_WIDTH,
      borderRadius: 16,
      alignItems: 'center',
      justifyContent: 'center',
    },
    iconButtonSecondary: {
      marginLeft: 8,
    },
    rightAddon: {
      flexShrink: 0,
    },
    rightAddonWithActions: {
      marginRight: 8,
    },
  });
